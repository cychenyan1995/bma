{"version":3,"sources":["src/pages/salesTask/components/EditableCell.js","src/pages/salesTask/index.js","src/pages/salesTask/components/TableModal.js","src/pages/salesTask/components/ImportForm.js"],"names":["_react","_interopRequireWildcard","__webpack_require__","EditableContext","React","createContext","EditableRow","_ref","form","props","index","_objectWithoutProperties2","default","createElement","Provider","value","EditableFormRow","_form","create","FormItem","Item","EditableCell","Component","[object Object]","super","arguments","this","getInput","inputType","_inputNumber","min","formatter","replace","_input","render","_this$props","editing","dataIndex","title","record","restProps","Consumer","getFieldDecorator","style","margin","rules","required","message","initialValue","children","_PageHeaderWrapper","_interopRequireDefault","_Table","_dva","_ImportForm","_EditableCell","_router","_TableModal","SalesTask","connect","salesTask","constructor","toSendInfo","type","name","regionalManagerLeader","regionalManager","setState","TableVisible","importTask","importVisible","sendMessage","list","length","_modal","warning","content","confirm","that","onOk","state","columns","dispatch","payload","Promise","resolve","reject","setTimeout","catch","console","log","onCancel","onChange","page","pageSize","currentPage","onShowSizeChange","_this$props2","isEditing","id","editingKey","cancel","toSpDetail","spCode","detailSpVisible","hideModal","hideTableModal","submitModal","formRef","validateFieldsAndScroll","err","values","baseColunm","width","fixed","text","Link","to","pathname","query","editable","operationCol","href","onClick","save","marginRight","_popconfirm","onConfirm","edit","detailVisible","validateFields","error","row","_this$props3","tasknumDidihuService","parseInt","tasknumDvd","tasknumFunctionRearview","tasknumGps","tasknumRearview","tasknumWirelessCharge","tasknumYunjing","newData","findIndex","item","salesTaskRow","_objectSpread2","push","data","publishStatus","pop","components","body","cell","map","col","onCell","test","_card","bordered","_row","_col","_button","disabled","visible","footer","wrappedComponentRef","scroll","x","y","dataSource","total","_Detail","TableModal","toDetail","showDetail","monthSalesTaskDetailList","goBack","view","_table","textAlign","setTitle","pagination","_reqwest","ImportForm","normFile","e","Array","isArray","fileList","handleUpload","formData","FormData","append","uploading","url","method","processData","success","res","isImported","_message2","failList","_tag","marginTop","fontSize","color","result","spName","errorMsg","okText","setFieldsValue","upload","cancelUpload","_this$state","formItemLayout","labelCol","span","wrapperCol","headers","authorization","onRemove","file","indexOf","newFileList","slice","splice","beforeUpload","className","encType","_extends2","label","valuePropName","getValueFromEvent","_upload","marginLeft","_icon","offset","loading","htmlType"],"mappings":"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","file":"4.async.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Form, Input, InputNumber} from 'antd';\r\n\r\n\r\nconst EditableContext = React.createContext();\r\n\r\nconst EditableRow = ({ form, index, ...props }) => (\r\n  <EditableContext.Provider value={form}>\r\n    <tr {...props} />\r\n  </EditableContext.Provider>\r\n);\r\n\r\nconst EditableFormRow = Form.create()(EditableRow);\r\n\r\nconst FormItem = Form.Item;\r\n\r\nclass EditableCell extends Component {\r\n\r\n  getInput = () => {\r\n    if (this.props.inputType === 'number') {\r\n      return <InputNumber min={0} formatter={value => `${value}`.replace('.', '')}/>; // onChange={this.handleNumberChange}\r\n    }\r\n    return <Input />;\r\n  };\r\n\r\n  // handleNumberChange = (e) => {\r\n  //   console.log(e)\r\n  //   if()\r\n  // }\r\n\r\n  render() {\r\n    const {\r\n      editing,\r\n      dataIndex,\r\n      title,\r\n      inputType,\r\n      record,\r\n      index,\r\n      ...restProps\r\n    } = this.props;\r\n    //console.log(\"editing:\"+editing);\r\n    return (\r\n      //Consumer\r\n      <EditableContext.Consumer>\r\n        {(form) => {\r\n          const { getFieldDecorator } = form;\r\n          return (\r\n            <td {...restProps}>\r\n              {editing ? (\r\n                <FormItem style={{ margin: 0 }}>\r\n                  {getFieldDecorator(dataIndex, {\r\n                    rules: [{\r\n                      required: true,\r\n                      message: `请输入 ${title}!`,\r\n                    }],\r\n                    initialValue: record[dataIndex],\r\n                  })(this.getInput())}\r\n                </FormItem>\r\n              ) : restProps.children}\r\n            </td>\r\n          );\r\n        }}\r\n      </EditableContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditableCell\r\nexport {\r\n     //EditableCell,\r\n     EditableContext,\r\n     EditableRow,\r\n     EditableFormRow\r\n}\r\n","import PageHeaderWrapper from '@/components/PageHeaderWrapper';\r\nimport React, { Component } from 'react';\r\nimport { Row, Col, Button, Card, Table, Input, InputNumber, Popconfirm, Form, Modal, Upload, Icon } from 'antd';\r\nimport TableCustom from '@/components/Table/Table';\r\nimport { connect } from 'dva';\r\nimport ImportForm from './components/ImportForm'\r\nimport EditableCell from './components/EditableCell';\r\nimport { EditableContext, EditableRow, EditableFormRow } from './components/EditableCell';\r\nimport { Link } from 'dva/router';\r\nimport TableModal from './components/TableModal';\r\n\r\nconst FormItem = Form.Item;\r\n\r\n@connect(({ salesTask }) => ({\r\n  salesTask\r\n}))\r\nclass SalesTask extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    //初始化表格title(含操作列，列表中含有操作方法)\r\n    let baseColunm = [\r\n      { title: '商户ID', width: 150, dataIndex: 'spCode', fixed: 'left' },\r\n      {\r\n        title: '商户名称',\r\n        width: 300,\r\n        dataIndex: 'spName',\r\n        render: (text, record) => {\r\n          return (\r\n            //<span><a \r\n            //href=\"javascript:;\"\r\n            //onClick={() => this.toSpDetail(record.spCode)}>{text}</a></span>\r\n            //,query:{goBack: this.detailGoBack}\r\n            <Link to={{pathname:'/base/detail', query:{type:'task', record: record}}}>{text}</Link>\r\n          )\r\n        },\r\n        fixed: 'left'\r\n      },\r\n      { title: '区域', width: 150, dataIndex: 'area' },\r\n      {\r\n        title: '大区经理',\r\n        width: 150,\r\n        dataIndex: 'regionalManagerLeader',\r\n        /*        render: (text, record) => {\r\n                  return (\r\n                    //<Link to=\"/send/sendMessage/leader/{text}\">{text}</Link>\r\n                    <span><a \r\n                   href=\"javascript:;\"\r\n                   onClick={() => this.toSendInfo(record,'leader')}>{text}</a></span>\r\n                  )\r\n                }*/\r\n      },\r\n      {\r\n        title: '区域经理',\r\n        width: 150,\r\n        dataIndex: 'regionalManager',\r\n        /*        render: (text, record) => {\r\n                  return (\r\n                    // <Link to=\"/send/sendMessage/manager/{text}\">{text}</Link>\r\n                    <span><a \r\n                   href=\"javascript:;\"\r\n                   onClick={() => this.toSendInfo(record,'manager')}>{text}</a></span>\r\n                  )\r\n                }\r\n        */\r\n      },\r\n      { title: '业务类型', width: 150, dataIndex: 'bizType' },\r\n      { title: '任务期数', width: 150, dataIndex: 'month' }, //////\r\n      { title: '广联DVD任务数', width: 150, dataIndex: 'tasknumDvd', editable: true },\r\n      { title: '广联GPS任务数', width: 150, dataIndex: 'tasknumGps', editable: true },\r\n      { title: '嘀嘀虎智能云镜任务数', width: 150, dataIndex: 'tasknumYunjing', editable: true },\r\n      { title: '嘀嘀虎车联网服务激活卡-1年版任务数', width: 150, dataIndex: 'tasknumDidihuService', editable: true },\r\n      { title: '无线车充任务数', width: 150, dataIndex: 'tasknumWirelessCharge', editable: true },\r\n      { title: '纯流媒体后视镜任务数', width: 150, dataIndex: 'tasknumRearview', editable: true },\r\n      { title: '全功能_流媒体后视镜任务数', width: 150, dataIndex: 'tasknumFunctionRearview', editable: true },\r\n\r\n    ];\r\n\r\n    //\r\n    const operationCol = {\r\n      title: '操作',\r\n      width: 150,\r\n      dataIndex: 'operation',\r\n      render: (text, record) => {\r\n        //根据editable判断状态\r\n        const editable = this.isEditing(record);\r\n        return (\r\n          <div>\r\n              {editable ? (\r\n                <span>\r\n                  <EditableContext.Consumer>\r\n                    {form => (\r\n                      <a\r\n                        href=\"javascript:;\"\r\n                        onClick={() => this.save(form, record.id)}\r\n                        style={{ marginRight: 8 }}\r\n                      >\r\n                        保存\r\n                      </a>\r\n                    )}\r\n                  </EditableContext.Consumer>\r\n                  <Popconfirm\r\n                    title=\"确定取消?\"\r\n                    onConfirm={() => this.cancel(record.id)}\r\n                  >\r\n                    <a>取消</a>\r\n                  </Popconfirm>\r\n                </span>\r\n              ) : (\r\n                <a onClick={() => this.edit(record.id)}>编辑</a>\r\n              )}\r\n            </div>\r\n        );\r\n      }\r\n    };\r\n    //发布任务控制按钮sendMessageBtn\r\n    this.state = {\r\n      columns: baseColunm,\r\n      operationCol: operationCol,\r\n      editingKey: '',\r\n      importVisible: false,\r\n      detailVisible: false,\r\n      TableVisible: false,\r\n      detailSpVisible: false,\r\n      page: 1,\r\n      pageSize: 10,\r\n    };\r\n\r\n    const { dispatch, salesTask } = props;\r\n    dispatch({\r\n      type: 'salesTask/fetchTaskList',\r\n      payload: {\r\n        currentPage: this.state.page,\r\n        pageSize: this.state.pageSize\r\n      }\r\n    });\r\n  };\r\n\r\n  //推送列表\r\n  toSendInfo = (record, type) => {\r\n    let name = '';\r\n    switch (type) {\r\n      case 'leader':\r\n        name = record.regionalManagerLeader;\r\n        break;\r\n\r\n      case 'manager':\r\n        name = record.regionalManager;\r\n        break;\r\n\r\n    };\r\n    this.setState({ TableVisible: true, type: type, name: name });\r\n  }\r\n\r\n  //导入\r\n  importTask = () => {\r\n\r\n    //表格列数问题\r\n    /*    let columns = this.state.columns;\r\n        if (columns.length === 14) {\r\n          columns.push(this.state.operationCol);\r\n          this.setState({ columns: columns });\r\n        }*/\r\n    //弹框\r\n    this.setState({ importVisible: true });\r\n\r\n  };\r\n\r\n  //发布任务\r\n  sendMessage = () => {\r\n    //取出原数据\r\n    const { salesTask } = this.props;\r\n    if (salesTask.list.length === 0) {\r\n      Modal.warning({\r\n        title: '提示信息',\r\n        content: '本月还没有导入任务数，不能发布',\r\n      });\r\n    } else {\r\n      const confirm = Modal.confirm;\r\n      const that = this;\r\n      confirm({\r\n        title: '是否确定发布任务?',\r\n        content: '发布任务后不能修改任务数',\r\n        onOk() {\r\n          let baseColunm = that.state.columns;\r\n          const { dispatch } = that.props;\r\n          dispatch({\r\n            type: 'salesTask/fetchSendMessage',\r\n            payload: {}\r\n            //后台推送接口\r\n          })\r\n          return new Promise((resolve, reject) => {\r\n            setTimeout(resolve, 1000);\r\n          }).catch(() => console.log('Oops errors!'));\r\n        },\r\n        onCancel() {},\r\n      });\r\n    }\r\n\r\n  }\r\n  // \r\n  onChange = (page, pageSize) => {\r\n    const { dispatch, salesTask } = this.props;\r\n    dispatch({\r\n      type: 'salesTask/fetchTaskList',\r\n      payload: {\r\n        currentPage: page,\r\n        pageSize: pageSize\r\n      }\r\n    });\r\n    //修改page和pageSize\r\n    this.setState({ page: page, pageSize: pageSize });\r\n  };\r\n\r\n  onShowSizeChange = (page, pageSize) => {\r\n    const { dispatch, salesTask } = this.props;\r\n    dispatch({\r\n      type: 'salesTask/fetchTaskList',\r\n      payload: {\r\n        currentPage: page,\r\n        pageSize: pageSize\r\n      }\r\n    });\r\n    //修改page和pageSize\r\n    this.setState({ page: page, pageSize: pageSize });\r\n  }\r\n\r\n  //编辑\r\n  isEditing = (record) => {\r\n    //editingKey初始化为'' 初始化的状态都不是编辑状态\r\n    return record.id === this.state.editingKey;\r\n  };\r\n  //确认编辑\r\n  edit(id) {\r\n    this.setState({ editingKey: id });\r\n  }\r\n  //保存\r\n  save(form, id) {\r\n    form.validateFields((error, row) => {\r\n      if (error) {\r\n        return;\r\n      }\r\n\r\n      //取出原数据\r\n      const { dispatch, salesTask } = this.props;\r\n\r\n      //数据全部修改为0时，给出提示\r\n      const tasknumDidihuService = parseInt(row.tasknumDidihuService);\r\n      const tasknumDvd = parseInt(row.tasknumDvd);\r\n      const tasknumFunctionRearview = parseInt(row.tasknumFunctionRearview);\r\n      const tasknumGps = parseInt(row.tasknumGps);\r\n      const tasknumRearview = parseInt(row.tasknumRearview);\r\n      const tasknumWirelessCharge = parseInt(row.tasknumWirelessCharge);\r\n      const tasknumYunjing = parseInt(row.tasknumYunjing);\r\n      if (tasknumDidihuService === 0 &&\r\n        tasknumDvd === 0 &&\r\n        tasknumFunctionRearview === 0 &&\r\n        tasknumGps === 0 &&\r\n        tasknumRearview === 0 &&\r\n        tasknumWirelessCharge === 0 &&\r\n        tasknumYunjing === 0) {\r\n          Modal.warning({\r\n            title: '提示信息',\r\n            content: '不能将所有产品的任务数都设置为0',\r\n          });\r\n      } else {\r\n\r\n        const newData = [...salesTask.list];\r\n        const index = newData.findIndex(item => id === item.id);\r\n        //更新要修改的数据\r\n        if (index > -1) {\r\n          const item = newData[index];\r\n          let salesTaskRow = {\r\n            ...item,\r\n            ...row,\r\n          };\r\n          dispatch({\r\n            type: 'salesTask/fetchUpdateTask',\r\n            payload: {\r\n              currentPage: this.state.page,\r\n              pageSize: this.state.pageSize,\r\n              ...salesTaskRow\r\n            }\r\n          });\r\n          //查询\r\n          /* dispatch({\r\n             type: 'salesTask/fetchTaskList',\r\n             payload: {\r\n               currentPage: this.state.page,\r\n               pageSize: this.state.pageSize\r\n             }\r\n           });*/\r\n          this.setState({ editingKey: '' });\r\n          /*newData.splice(index, 1, {\r\n            ...item,\r\n            ...row,\r\n          });\r\n          this.setState({ data: newData, editingKey: '' });*/\r\n        } else {\r\n          newData.push(row);\r\n          this.setState({ data: newData, editingKey: '' });\r\n        }\r\n      }\r\n\r\n    });\r\n  }\r\n  //取消\r\n  cancel = () => {\r\n    //恢复state的初始化状态\r\n    this.setState({ editingKey: '' });\r\n  };\r\n\r\n  //跳转\r\n  toSpDetail = (spCode) => {\r\n\r\n    this.setState({ detailSpVisible: true, spCode: spCode });\r\n\r\n  }\r\n\r\n  //弹框\r\n  hideModal = () => {\r\n    this.setState({ importVisible: false });\r\n  }\r\n  //table弹框\r\n  hideTableModal = () => {\r\n    this.setState({ TableVisible: false });\r\n  }\r\n\r\n  //确认导入\r\n  submitModal = () => {\r\n    //this.formRef拿到了form\r\n    this.formRef.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        // console.log('Received values of form: ', values);\r\n        // 刷新列表数据\r\n        const { dispatch } = this.props;\r\n        dispatch({\r\n          type: 'salesTask/fetchTaskList',\r\n          payload: {\r\n            currentPage: 1,\r\n            pageSize: 10\r\n          }\r\n        })\r\n        this.setState({ importVisible: false });\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    const { salesTask } = this.props;\r\n\r\n    let columns = this.state.columns;\r\n    if (salesTask.publishStatus === 1 && columns.length === 15) { //已发布\r\n      columns = this.state.columns;\r\n      columns.pop();\r\n    } else if (salesTask.publishStatus === 0 && columns.length === 14) {\r\n      columns.push(this.state.operationCol);\r\n    }\r\n\r\n    //table的components属性\r\n    const components = {\r\n      body: {\r\n        row: EditableFormRow,\r\n        cell: EditableCell,\r\n      },\r\n    };\r\n\r\n    columns = columns.map((col) => {\r\n      if (!col.editable) {\r\n        return col;\r\n      }\r\n      return {\r\n        ...col,\r\n        onCell: record => ({\r\n          record,\r\n          inputType: 'number',\r\n          dataIndex: col.dataIndex,\r\n          title: col.title,\r\n          editing: this.isEditing(record),\r\n          test: record.id\r\n        }),\r\n      };\r\n    });\r\n\r\n    return (\r\n      <PageHeaderWrapper>\r\n        <Card bordered={false}>\r\n          <Row>\r\n            <Col>\r\n              <Button type=\"primary\" disabled={salesTask.publishStatus === 1} style={{marginRight:'20px'}} onClick={this.importTask}>导入任务配置</Button>\r\n              <Modal\r\n                title=\"导入文件\"\r\n                visible={this.state.importVisible}\r\n                // onOk={this.submitModal}\r\n                 onCancel={this.hideModal}\r\n                // okText=\"确认\"\r\n                // cancelText=\"取消\"\r\n                footer={null}\r\n              >\r\n              <ImportForm onOk={this.submitModal}\r\n                onCancel={this.hideModal} wrappedComponentRef={(form) => this.formRef = form}></ImportForm>\r\n              </Modal>\r\n              <Button type=\"primary\" onClick={this.sendMessage} disabled={salesTask.publishStatus === 1}>发布任务</Button>\r\n            </Col>\r\n          </Row>\r\n             \r\n        </Card>\r\n          <Modal\r\n            title=\"我的月报表\"\r\n            visible={this.state.TableVisible}\r\n            onCancel={this.hideTableModal}\r\n            footer={null}\r\n            >\r\n            \r\n            <TableModal type={this.state.type} name={this.state.name}></TableModal>\r\n          </Modal>\r\n         <TableCustom\r\n            components={components}\r\n            columns={columns}\r\n            scroll={{ x: salesTask.publishStatus === 1 ? 2250 : 2400,y: 600 }}\r\n            dataSource={ salesTask.list }//{this.state.data ? this.state.data : salesTask.list}\r\n            total={salesTask.total}\r\n            onChange={this.onChange}\r\n            onShowSizeChange={this.onShowSizeChange}\r\n            page={salesTask.currentPage}\r\n            />\r\n          </PageHeaderWrapper>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default SalesTask\r\n","import React, { Component } from 'react';\r\nimport { Card, Table } from 'antd';\r\nimport Detail from '@/pages/sendMessage/components/Detail';\r\nimport { connect } from 'dva';\r\n\r\n@connect(({sendMessage}) => ({\r\n  sendMessage\r\n}))\r\nclass TableModal extends Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      showDetail : false,\r\n      monthSalesTaskDetailList: [],\r\n      title: ''\r\n    }\r\n  const {dispatch} = this.props;\r\n  dispatch({\r\n    type: 'sendMessage/fetchQuerySendInfo',\r\n    payload: {\r\n      type: this.props.type,\r\n      name: this.props.name\r\n    }\r\n  })\r\n\r\n  }\r\n\r\n  toDetail = (record,text) => {\r\n    //if(id){\r\n      this.setState({showDetail: true, monthSalesTaskDetailList: record.monthSalesTaskDetailList, title: text });\r\n\r\n    //}\r\n  }\r\n\r\n  goBack = () => {\r\n    this.setState({showDetail: false});\r\n  }\r\n\r\n\r\n  render(){\r\n/*    const dataSource = [\r\n      { manager: '华南', totalTaskNum: 100, totalSaleNum: 80, totalRatio: '80%' }\r\n    ]*/\r\n    const { sendMessage } = this.props;\r\n    const dataSource = sendMessage.data;\r\n    \r\n    const columns = [{\r\n        title: '任务责任人',\r\n        width: 100,\r\n        dataIndex: 'manager',\r\n        render: (text, record) => {\r\n          return (\r\n            <span><a href=\"javascript:;\" onClick={() => this.toDetail(record,text)}>{text}</a></span>\r\n          )\r\n        }\r\n      },\r\n      { title: '总任务数', width: 80, dataIndex: 'totalTaskNum' },\r\n      { title: '总销售数', width: 80, dataIndex: 'totalSaleNum' },\r\n      { title: '任务完成率', width: 80, dataIndex: 'totalRatio' },\r\n    ];\r\n\r\n    let view = '';\r\n    if(!this.state.showDetail){\r\n     view = (\r\n        <Table style={{textAlign: 'center'}}\r\n        columns={columns}\r\n        dataSource={dataSource}\r\n        bordered\r\n        title={this.setTitle}\r\n        pagination={false}\r\n       />\r\n       )\r\n    }else{\r\n       view = (\r\n        <Detail goBack={this.goBack} dataSource={this.state.monthSalesTaskDetailList} title={this.state.title}\r\n       />\r\n        )  \r\n    }\r\n\r\n    return (\r\n      <div>\r\n         {view}\r\n      </div>\r\n     \r\n    )\r\n  }\r\n}\r\nexport default TableModal","import React, { Component } from 'react';\nimport { Row, Col, Button, Form, Upload, Icon, message, Modal, Tag } from 'antd';\nimport reqwest from 'reqwest';\n\nclass ImportForm extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      fileList: [],\n      uploading: false,\n    }\n  }\n\n  normFile = (e) => {\n    // console.log('Upload event:', e);\n    if (Array.isArray(e)) {\n      return e;\n    }\n    return e && e.fileList;\n  };\n\n  // 上传调后台\n  handleUpload = () => {\n    const { fileList } = this.state;\n    const file = fileList[0];\n    const formData = new FormData();\n    formData.append('file', fileList[0]);\n    this.setState({\n      uploading: true\n    });\n    reqwest({\n       //url: 'http://localhost:8088/gldb-admin-bma/salesTask/importSalesTask',\n      url: '/gldb-admin-bma/salesTask/importSalesTask',\n      method: 'post',\n      processData: false,\n      data: formData,\n      success: (res) => {\n        // console.log(res);\n        if (res.data[0].isImported === 0) {\n          message.success('upload successfully.');\n        } else if (res.data[0].isImported === 1) {\n          message.error('上传文件不为.xls或.xlsx格式');\n        } else if (res.data[0].isImported === 2) {\n          message.error('导入Excel数据失败');\n        } else if (res.data[0].isImported === 3) {\n          message.error('导入的Excel表数据为空');\n        } else if (res.data[0].isImported === 4) {\n          // message.error('存在任务数为负数或小数或空数据，请修改');\n          Modal.warning({\n            width:'730px',\n            title: '存在导入数据有错误，请修改',\n            content: (\n              <div>\n                {res.data[0].failList.map((item) =>\n                  <Tag style={{marginTop:\"10px\",fontSize:\"15px\"}} color=\"volcano\">{item.result.spName || '错误信息'} : {item.errorMsg}</Tag>\n                )}\n              </div>\n            ),\n            okText: '知道了'\n          });\n        }\n        this.setState({\n          fileList: [],\n          uploading: false\n        });\n        const { onOk } = this.props;\n        onOk();\n        // setFieldsValue  修改formItem對應的值upload\n        this.props.form.setFieldsValue({\n          upload: [],\n        });\n      },\n      error: () => {\n        this.setState({\n          fileList: [],\n          uploading: false\n        });\n        this.props.form.setFieldsValue({\n          upload: [],\n        });\n        message.error('upload failed.');\n      },\n    });\n\n  }\n\n  cancelUpload = () => {\n    this.setState({\n      fileList: [],\n      uploading: false\n    });\n    this.props.form.setFieldsValue({\n      upload: [],\n    });\n    const { onCancel } = this.props;\n    onCancel();\n  }\n\n  render() {\n    const FormItem = Form.Item;\n    const { uploading, fileList } = this.state;\n\n    const formItemLayout = {\n      labelCol: { span: 5 },\n      wrapperCol: { span: 14 },\n    };\n\n    const { form } = this.props;\n    const { getFieldDecorator } = form;\n    const upload = {\n      name: 'file',\n      // action   不需要点击按钮就直接调后台\n      /* action: 'http://localhost:8088/gldb-admin-bma/salesTask/importSalesTask', */\n      // action: '/gldb-admin-bma/salesTask/importSalesTask',\n      headers: {\n        authorization: 'authorization-text',\n      },\n      // onChange: (info) => {\n      //   if (info.file.status !== 'uploading') {\n      //     console.log(info.file, info.fileList);\n      //   }\n      //   if (info.file.status === 'done') {\n      //     message.success(`${info.file.name} 文件上传成功`);\n      //     this.setState({fileList:info.fileList})\n      //   } else if (info.file.status === 'error') {\n      //     message.error(`${info.file.name} 文件上传失败.`);\n      //   }\n      // },\n      onRemove: (file) => {\n        this.setState((state) => {\n          const index = state.fileList.indexOf(file);\n          const newFileList = state.fileList.slice();\n          newFileList.splice(index, 1);\n          return {\n            fileList: newFileList,\n          };\n        });\n      },\n      beforeUpload: (file) => {\n        this.setState(state => ({\n          // fileList: [...state.fileList, file],\n          fileList: [file],\n        }));\n        this.props.form.setFieldsValue({\n          upload: [file],\n        });\n\n        return false;\n      },\n      fileList\n    };\n\n    return (\n      // 文件上传   给form添加method=\"post\" encType=\"multipart/form-data\"\n      <Form className=\"ant-advanced-search-form\" method=\"post\" encType=\"multipart/form-data\">\n        <Row>\n          <Col span={24}>\n            <FormItem label=\"导入\" {... formItemLayout}>\n              {getFieldDecorator('upload',{\n                valuePropName: 'fileList',\n                getValueFromEvent: this.normFile,\n                rules: [\n                  { required: true, message: '请选择上传文件!' },\n                ],\n              })(\n                <Upload {...upload}>\n                  <Button style={{marginLeft:'20px'}} disabled={fileList.length === 1}>\n                    <Icon type=\"upload\" /> 选择文件\n                  </Button>\n                </Upload>\n              )}\n            </FormItem>\n          </Col>\n        </Row>\n        <Row>\n          <Col offset={5}>\n            <Button\n              type=\"primary\"\n              loading={uploading}\n              htmlType=\"submit\"\n              style={{marginRight:'20px'}}\n              onClick={this.handleUpload}\n              disabled={fileList.length === 0}\n            > {uploading ? '加载中' : '确认导入' }\n            </Button>\n            <Button type=\"primary\" onClick={this.cancelUpload}>取消导入</Button>\n          </Col>\n        </Row>\n      </Form>\n    )\n  }\n}\n\nexport default Form.create()(ImportForm)\n"],"sourceRoot":""}