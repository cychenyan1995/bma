{"version":3,"sources":["src/pages/salesTask/components/EditableCell.js","src/pages/salesTask/index.js","src/pages/salesTask/components/TableModal.js","src/pages/salesTask/components/ImportModal.js"],"names":["_react","_interopRequireWildcard","__webpack_require__","EditableContext","React","createContext","EditableRow","_ref","form","props","index","_objectWithoutProperties2","default","createElement","Provider","value","EditableFormRow","_form","create","FormItem","Item","EditableCell","Component","[object Object]","super","arguments","this","getInput","inputType","_inputNumber","_input","render","_this$props","editing","dataIndex","record","title","restProps","Consumer","getFieldDecorator","style","margin","rules","required","initialValue","children","_PageHeaderWrapper","_interopRequireDefault","_Table","_dva","_ImportModal","_EditableCell","_TableModal","_Detail","SalesTask","connect","salesTask","constructor","toSendInfo","type","name","regionalManagerLeader","regionalManager","setState","TableVisible","importTask","columns","state","length","push","operationCol","sendMessageBtn","importVisible","sendMessage","baseColunm","pop","dispatch","payload","onChange","page","pageSize","currentPage","onShowSizeChange","_this$props2","isEditing","id","editingKey","cancel","toSpDetail","spCode","detailSpVisible","hideModal","hideTableModal","submitModal","formRef","validateFieldsAndScroll","err","values","console","log","detailGoBack","width","text","href","onClick","editable","save","marginRight","_popconfirm","onConfirm","edit","detailVisible","validateFields","error","row","_this$props3","newData","list","findIndex","item","_objectSpread2","data","components","body","cell","map","col","onCell","test","view","goBack","_card","bordered","_row","_col","_button","_modal","visible","onOk","onCancel","okText","cancelText","importBtn","wrappedComponentRef","disabled","footer","scroll","x","y","dataSource","total","TableModal","toDetail","showDetail","monthSalesTaskDetailList","_table","textAlign","setTitle","pagination","_index","ImportModal","normFile","e","Array","isArray","fileList","importFile","file","formItemLayout","labelCol","span","wrapperCol","upload","action","headers","authorization","info","status","_message2","success","className","_extends2","label","valuePropName","getValueFromEvent","message","_upload","marginLeft","_icon"],"mappings":"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","file":"4.async.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Form, Input, InputNumber} from 'antd';\r\n\r\n\r\nconst EditableContext = React.createContext();\r\n\r\nconst EditableRow = ({ form, index, ...props }) => (\r\n  <EditableContext.Provider value={form}>\r\n    <tr {...props} />\r\n  </EditableContext.Provider>\r\n);\r\n\r\nconst EditableFormRow = Form.create()(EditableRow);\r\n\r\nconst FormItem = Form.Item;\r\n\r\nclass EditableCell extends Component {\r\n\r\n  getInput = () => {\r\n    if (this.props.inputType === 'number') {\r\n      return <InputNumber />;\r\n    }\r\n    return <Input />;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      editing,\r\n      dataIndex,\r\n      title,\r\n      inputType,\r\n      record,\r\n      index,\r\n      ...restProps\r\n    } = this.props;\r\n    //console.log(\"editing:\"+editing);\r\n    return (\r\n      //Consumer\r\n      <EditableContext.Consumer>\r\n        {(form) => {\r\n          const { getFieldDecorator } = form;\r\n          return (\r\n            <td {...restProps}>\r\n              {editing ? (\r\n                <FormItem style={{ margin: 0 }}>\r\n                  {getFieldDecorator(dataIndex, {\r\n                    rules: [{\r\n                      required: true,\r\n                      //message: `请输入 ${title}!`,\r\n                    }],\r\n                    initialValue: record[dataIndex],\r\n                  })(this.getInput())}\r\n                </FormItem>\r\n              ) : restProps.children}\r\n            </td>\r\n          );\r\n        }}\r\n      </EditableContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditableCell\r\nexport {\r\n     //EditableCell,\r\n     EditableContext,\r\n     EditableRow,\r\n     EditableFormRow\r\n}\r\n","import PageHeaderWrapper from '@/components/PageHeaderWrapper';\r\nimport React, { Component } from 'react';\r\nimport { Row, Col, Button, Card, Table, Input, InputNumber, Popconfirm, Form, Modal, Upload, Icon } from 'antd';\r\nimport TableCustom from '@/components/Table/Table';\r\nimport { connect } from 'dva';\r\nimport ImportModal from './components/ImportModal'\r\nimport EditableCell from './components/EditableCell';\r\nimport { EditableContext, EditableRow, EditableFormRow } from './components/EditableCell';\r\nimport { Link } from 'dva/router';\r\nimport TableModal from './components/TableModal'\r\nimport Detail from '@/pages/salesHistory/components/Detail';\r\n\r\nconst FormItem = Form.Item;\r\n\r\n@connect(({ salesTask }) => ({\r\n  salesTask\r\n}))\r\nclass SalesTask extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    //初始化表格title(含操作列，列表中含有操作方法)\r\n    let baseColunm = [\r\n      { title: '商户ID', width: 150, dataIndex: 'spCode' },\r\n      {\r\n        title: '商户名称',\r\n        width: 300,\r\n        dataIndex: 'spName',\r\n        render: (text, record) => {\r\n          return (\r\n            <span><a \r\n           href=\"javascript:;\"\r\n           onClick={() => this.toSpDetail(record.spCode)}>{text}</a></span>\r\n          )\r\n        }\r\n      },\r\n      { title: '区域', width: 150, dataIndex: 'area' },\r\n      {\r\n        title: '大区经理',\r\n        width: 150,\r\n        dataIndex: 'regionalManagerLeader',\r\n/*        render: (text, record) => {\r\n          return (\r\n            //<Link to=\"/send/sendMessage/leader/{text}\">{text}</Link>\r\n            <span><a \r\n           href=\"javascript:;\"\r\n           onClick={() => this.toSendInfo(record,'leader')}>{text}</a></span>\r\n          )\r\n        }*/\r\n      },\r\n      {\r\n        title: '区域经理',\r\n        width: 150,\r\n        dataIndex: 'regionalManager',\r\n/*        render: (text, record) => {\r\n          return (\r\n            // <Link to=\"/send/sendMessage/manager/{text}\">{text}</Link>\r\n            <span><a \r\n           href=\"javascript:;\"\r\n           onClick={() => this.toSendInfo(record,'manager')}>{text}</a></span>\r\n          )\r\n        }\r\n*/      },\r\n      { title: '业务类型', width: 150, dataIndex: 'bizType' },\r\n      { title: '任务期数', width: 150, dataIndex: 'month' }, //////\r\n      { title: '广联DVD任务数', width: 150, dataIndex: 'tasknumDvd', editable: true },\r\n      { title: '广联GPS任务数', width: 150, dataIndex: 'tasknumGps', editable: true },\r\n      { title: '嘀嘀虎智能云镜任务数', width: 150, dataIndex: 'tasknumYunjing', editable: true },\r\n      { title: '嘀嘀虎车联网服务激活卡-1年版任务数', width: 150, dataIndex: 'tasknumDidihuService', editable: true },\r\n      { title: '无线车充任务数', width: 150, dataIndex: 'tasknumWirelessCharge', editable: true },\r\n      { title: '纯流媒体后视镜任务数', width: 150, dataIndex: 'tasknumRearview', editable: true },\r\n      { title: '全功能_流媒体后视镜任务数', width: 150, dataIndex: 'tasknumFunctionRearview', editable: true },\r\n\r\n    ];\r\n\r\n    //\r\n    const operationCol = {\r\n      title: '操作',\r\n      width: 150,\r\n      dataIndex: 'operation',\r\n      render: (text, record) => {\r\n        //根据editable判断状态\r\n        const editable = this.isEditing(record);\r\n        return (\r\n          <div>\r\n              {editable ? (\r\n                <span>\r\n                  <EditableContext.Consumer>\r\n                    {form => (\r\n                      <a\r\n                        href=\"javascript:;\"\r\n                        onClick={() => this.save(form, record.id)}\r\n                        style={{ marginRight: 8 }}\r\n                      >\r\n                        保存\r\n                      </a>\r\n                    )}\r\n                  </EditableContext.Consumer>\r\n                  <Popconfirm\r\n                    title=\"确定取消?\"\r\n                    onConfirm={() => this.cancel(record.id)}\r\n                  >\r\n                    <a>取消</a>\r\n                  </Popconfirm>\r\n                </span>\r\n              ) : (\r\n                <a onClick={() => this.edit(record.id)}>编辑</a>\r\n              )}\r\n            </div>\r\n        );\r\n      }\r\n    };\r\n\r\n    baseColunm.push(operationCol);\r\n    //发布任务控制按钮sendMessageBtn\r\n    this.state = {\r\n      columns: baseColunm,\r\n      operationCol: operationCol,\r\n      editingKey: '',\r\n      sendMessageBtn: false,\r\n      importVisible: false,\r\n      detailVisible: false,\r\n      TableVisible: false,\r\n      detailSpVisible: false,\r\n      page: 1,\r\n      pageSize: 10\r\n    };\r\n\r\n    const { dispatch, salesTask } = props;\r\n    dispatch({\r\n      type: 'salesTask/fetchTaskList',\r\n      payload: {\r\n        currentPage: this.state.page,\r\n        pageSize: this.state.pageSize\r\n      }\r\n    });\r\n  };\r\n\r\n  //推送列表\r\n  toSendInfo = (record, type) => {\r\n    let name = '';\r\n    switch (type) {\r\n      case 'leader':\r\n        name = record.regionalManagerLeader;\r\n        break;\r\n\r\n      case 'manager':\r\n        name = record.regionalManager;\r\n        break;\r\n\r\n    };\r\n    this.setState({ TableVisible: true, type: type, name: name });\r\n  }\r\n\r\n  //导入\r\n  importTask = () => {\r\n    //表格列数问题\r\n    let columns = this.state.columns;\r\n    if (columns.length === 14) {\r\n      columns.push(this.state.operationCol);\r\n      this.setState({ columns: columns, sendMessageBtn: false });\r\n    }\r\n\r\n    //弹框\r\n    this.setState({ importVisible: true });\r\n\r\n  };\r\n\r\n  //发布任务\r\n  sendMessage = () => {\r\n    let baseColunm = this.state.columns;\r\n    //删除最后一列\r\n    baseColunm.pop();\r\n    this.setState({ columns: baseColunm, sendMessageBtn: true });\r\n    //后台推送接口\r\n    const { dispatch } = this.props;\r\n    dispatch({\r\n      type: 'salesTask/fetchSendMessage',\r\n      payload: {}\r\n    })\r\n  }\r\n  // \r\n  onChange = (page, pageSize) => {\r\n    const { dispatch, salesTask } = this.props;\r\n    dispatch({\r\n      type: 'salesTask/fetchTaskList',\r\n      payload: {\r\n        currentPage: page,\r\n        pageSize: pageSize\r\n      }\r\n    });\r\n    //修改page和pageSize\r\n    this.setState({ page: page, pageSize: pageSize });\r\n  };\r\n\r\n  onShowSizeChange = (page, pageSize) => {\r\n    const { dispatch, salesTask } = this.props;\r\n    dispatch({\r\n      type: 'salesTask/fetchTaskList',\r\n      payload: {\r\n        currentPage: page,\r\n        pageSize: pageSize\r\n      }\r\n    });\r\n    //修改page和pageSize\r\n    this.setState({ page: page, pageSize: pageSize });\r\n  }\r\n\r\n  //编辑\r\n  isEditing = (record) => {\r\n    //editingKey初始化为'' 初始化的状态都不是编辑状态\r\n    return record.id === this.state.editingKey;\r\n  };\r\n  //确认编辑\r\n  edit(id) {\r\n    this.setState({ editingKey: id });\r\n  }\r\n  //保存\r\n  save(form, id) {\r\n    form.validateFields((error, row) => {\r\n      if (error) {\r\n        return;\r\n      }\r\n\r\n      //取出原数据\r\n      const { dispatch, salesTask } = this.props;\r\n\r\n      const newData = [...salesTask.list];\r\n      const index = newData.findIndex(item => id === item.id);\r\n      //更新要修改的数据\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        let salesTask = {\r\n          ...item,\r\n          ...row,\r\n        };\r\n        dispatch({\r\n          type: 'salesTask/fetchUpdateTask',\r\n          payload: salesTask\r\n        });\r\n        //查询\r\n        dispatch({\r\n          type: 'salesTask/fetchTaskList',\r\n          payload: {\r\n            currentPage: this.state.page,\r\n            pageSize: this.state.pageSize\r\n          }\r\n        });\r\n        this.setState({ editingKey: '' });\r\n        /*newData.splice(index, 1, {\r\n          ...item,\r\n          ...row,\r\n        });\r\n        this.setState({ data: newData, editingKey: '' });*/\r\n      } else {\r\n        newData.push(row);\r\n        this.setState({ data: newData, editingKey: '' });\r\n      }\r\n    });\r\n  }\r\n  //取消\r\n  cancel = () => {\r\n    //恢复state的初始化状态\r\n    this.setState({ editingKey: '' });\r\n  };\r\n\r\n  //跳转\r\n  toSpDetail = (spCode) => {\r\n    \r\n    this.setState({ detailSpVisible: true, spCode: spCode });\r\n\r\n  }\r\n\r\n  //弹框\r\n  hideModal = () => {\r\n    this.setState({ importVisible: false });\r\n  }\r\n  //table弹框\r\n  hideTableModal = () => {\r\n    this.setState({ TableVisible: false });\r\n  }\r\n\r\n  //确认导入\r\n  submitModal = () => {\r\n    //this.formRef拿到了form\r\n    this.formRef.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        console.log('Received values of form: ', values);\r\n        const { dispatch } = this.props;\r\n        dispatch({\r\n          type: 'salesTask/fetchImport',\r\n          payload: values\r\n        })\r\n\r\n        //按钮不可用\r\n\r\n        this.setState({ importVisible: false });\r\n      }\r\n    })\r\n  }\r\n\r\n  detailGoBack = () => {\r\n    this.setState({ detailSpVisible: false })\r\n  }\r\n\r\n  render() {\r\n\r\n    const { salesTask } = this.props;\r\n    let columns = this.state.columns;\r\n\r\n    //table的components属性\r\n    const components = {\r\n      body: {\r\n        row: EditableFormRow,\r\n        cell: EditableCell,\r\n      },\r\n    };\r\n\r\n    columns = columns.map((col) => {\r\n      if (!col.editable) {\r\n        return col;\r\n      }\r\n      return {\r\n        ...col,\r\n        onCell: record => ({\r\n          record,\r\n          inputType: 'number',\r\n          dataIndex: col.dataIndex,\r\n          title: col.title,\r\n          editing: this.isEditing(record),\r\n          test: record.id\r\n        }),\r\n      };\r\n    });\r\n\r\n    let view = ''\r\n    if (! this.state.detailSpVisible) {\r\n      view = (\r\n        <PageHeaderWrapper>\r\n        <Card bordered={false}>\r\n          <Row>\r\n            <Col>\r\n              <Button type=\"primary\" style={{marginRight:'20px'}} onClick={this.importTask}>导入任务配置</Button>\r\n              <Modal\r\n                title=\"导入文件\"\r\n                visible={this.state.importVisible}\r\n                onOk={this.submitModal}\r\n                onCancel={this.hideModal}\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n              >\r\n              <ImportModal importBtn={this.state.importBtn} wrappedComponentRef={(form) => this.formRef = form}></ImportModal>\r\n              </Modal>\r\n              <Button type=\"primary\" onClick={this.sendMessage} disabled={this.state.sendMessageBtn}>发布任务</Button>\r\n            </Col>\r\n          </Row>\r\n             \r\n        </Card>\r\n          <Modal\r\n            title=\"我的月报表\"\r\n            visible={this.state.TableVisible}\r\n            onCancel={this.hideTableModal}\r\n            footer={null}\r\n            >\r\n            \r\n            <TableModal type={this.state.type} name={this.state.name}></TableModal>\r\n          </Modal>\r\n         <TableCustom\r\n            components={components}\r\n            columns={columns}\r\n            scroll={{ x: 2500,y: 600 }}\r\n            dataSource={ salesTask.list }//{this.state.data ? this.state.data : salesTask.list}\r\n            total={salesTask.total}\r\n            onChange={this.onChange}\r\n            onShowSizeChange={this.onShowSizeChange}\r\n            />\r\n          </PageHeaderWrapper>\r\n      )\r\n    } else {\r\n      view = (\r\n        <Detail spCode={this.state.spCode} goBack={this.detailGoBack} />\r\n      )\r\n    }\r\n\r\n     return (\r\n      <div>\r\n         {view}\r\n      </div>\r\n     \r\n    )\r\n  }\r\n}\r\n\r\nexport default SalesTask\r\n","import React, { Component } from 'react';\r\nimport { Card, Table } from 'antd';\r\nimport Detail from '@/pages/sendMessage/components/Detail';\r\nimport { connect } from 'dva';\r\n\r\n@connect(({sendMessage}) => ({\r\n  sendMessage\r\n}))\r\nclass TableModal extends Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      showDetail : false,\r\n      monthSalesTaskDetailList: [],\r\n      title: ''\r\n    }\r\n  const {dispatch} = this.props;\r\n  dispatch({\r\n    type: 'sendMessage/fetchQuerySendInfo',\r\n    payload: {\r\n      type: this.props.type,\r\n      name: this.props.name\r\n    }\r\n  })\r\n\r\n  }\r\n\r\n  toDetail = (record,text) => {\r\n    //if(id){\r\n      this.setState({showDetail: true, monthSalesTaskDetailList: record.monthSalesTaskDetailList, title: text });\r\n\r\n    //}\r\n  }\r\n\r\n  goBack = () => {\r\n    this.setState({showDetail: false});\r\n  }\r\n\r\n\r\n  render(){\r\n/*    const dataSource = [\r\n      { manager: '华南', totalTaskNum: 100, totalSaleNum: 80, totalRatio: '80%' }\r\n    ]*/\r\n    const { sendMessage } = this.props;\r\n    const dataSource = sendMessage.data;\r\n    \r\n    const columns = [{\r\n        title: '任务责任人',\r\n        width: 100,\r\n        dataIndex: 'manager',\r\n        render: (text, record) => {\r\n          return (\r\n            <span><a href=\"javascript:;\" onClick={() => this.toDetail(record,text)}>{text}</a></span>\r\n          )\r\n        }\r\n      },\r\n      { title: '总任务数', width: 80, dataIndex: 'totalTaskNum' },\r\n      { title: '总销售数', width: 80, dataIndex: 'totalSaleNum' },\r\n      { title: '任务完成率', width: 80, dataIndex: 'totalRatio' },\r\n    ];\r\n\r\n    let view = '';\r\n    if(!this.state.showDetail){\r\n     view = (\r\n        <Table style={{textAlign: 'center'}}\r\n        columns={columns}\r\n        dataSource={dataSource}\r\n        bordered\r\n        title={this.setTitle}\r\n        pagination={false}\r\n       />\r\n       )\r\n    }else{\r\n       view = (\r\n        <Detail goBack={this.goBack} dataSource={this.state.monthSalesTaskDetailList} title={this.state.title}\r\n       />\r\n        )  \r\n    }\r\n\r\n    return (\r\n      <div>\r\n         {view}\r\n      </div>\r\n     \r\n    )\r\n  }\r\n}\r\nexport default TableModal","import React, { Component } from 'react';\r\nimport { Row, Col, Button, Form, Upload, Icon, message} from 'antd';\r\nimport { connect } from 'dva/index';\r\n\r\n@connect(({ salesTask }) => ({\r\n  salesTask,// namespace action\r\n}))\r\nclass ImportModal extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  normFile = (e) => {\r\n    console.log('Upload event:', e);\r\n    if (Array.isArray(e)) {\r\n      return e;\r\n    }\r\n    return e && e.fileList;\r\n  };\r\n\r\n  importFile = (file) => {\r\n    const {dispatch} = this.props;\r\n    dispatch({\r\n      type: 'salesTask/fetchImportTask',\r\n      payload: file,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const FormItem = Form.Item;\r\n\r\n    const formItemLayout = {\r\n      labelCol: { span: 5 },\r\n      wrapperCol: { span: 14 },\r\n    };\r\n\r\n    const { form } = this.props;\r\n    const { getFieldDecorator } = form;\r\n    // const {dispatch} = this.props;\r\n    const upload = {\r\n      name: 'file',\r\n      action: 'http://localhost:8088/gldb-admin-bma/salesTask/importSalesTask',\r\n      headers: {\r\n        authorization: 'authorization-text',\r\n      },\r\n      onChange(info) {\r\n        if (info.file.status !== 'uploading') {\r\n          console.log(info.file, info.fileList);\r\n        }\r\n        if (info.file.status === 'done') {\r\n          /* dispatch({\r\n            type: 'salesTask/fetchImportTask',\r\n            payload: info.file.originFileObj\r\n          }); */\r\n          message.success(`${info.file.name} 文件上传成功`);\r\n        } else if (info.file.status === 'error') {\r\n          message.error(`${info.file.name} 文件上传失败.`);\r\n        }\r\n      },\r\n    };\r\n\r\n    return (\r\n\r\n      <Form className=\"ant-advanced-search-form\">\r\n        <Row>\r\n          <Col span={24}>\r\n            <FormItem label=\"导入\" {... formItemLayout}>\r\n              {getFieldDecorator('upload',{\r\n                valuePropName: 'fileList',\r\n                getValueFromEvent: this.normFile,\r\n              }, {\r\n                rules: [\r\n                  { required: true, message: '请选择上传文件!' },\r\n                ],\r\n              })(\r\n                <Upload {...upload} >\r\n                  <Button style={{marginLeft:'20px'}}>\r\n                    <Icon type=\"upload\" /> 选择文件\r\n                  </Button>\r\n                </Upload>\r\n              )}\r\n            </FormItem>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form.create()(ImportModal)\r\n"],"sourceRoot":""}